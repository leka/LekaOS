# Leka - LekaOS
# Copyright 2022 APF France handicap
# SPDX-License-Identifier: Apache-2.0

name: Unit Tests

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_unit_tests:
    name: Build & run
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            compiler:
              name: Clang 18
              cc: /usr/bin/clang-18
              cxx: /usr/bin/clang++-18

          - os: ubuntu-24.04
            compiler:
              name: GCC 13
              cc: /usr/bin/gcc-13
              cxx: /usr/bin/g++-13

    steps:
      - uses: actions/checkout@v4

      - name: Set CC & CXX env
        id: set_cc_cxx_env
        shell: bash
        run: |
          ${{ matrix.compiler.cc }} --version
          ${{ matrix.compiler.cxx }} --version
          echo "CC=${{ matrix.compiler.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler.cxx }}" >> $GITHUB_ENV

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          ccache_key: ${{ runner.os }}-ccache-unit_tests-(${{ matrix.compiler.name }})
          ccache_restore_keys: |
            ${{ runner.os }}-ccache-unit_tests-(${{ matrix.compiler.name }})-
            ${{ runner.os }}-ccache-unit_tests-
            ${{ runner.os }}-ccache-

      #
      # Mark: - Config, build & run unit tests
      #

      - name: Ccache pre build
        run: |
          make ccache_prebuild

      - name: Config, build & run
        run: |
          make config_unit_tests
          make unit_tests

      - name: Ccache post build
        run: |
          make ccache_postbuild
          cat ${{ env.CCACHE_LOGFILE }} || True
          ccache -z

      - name: Generate coverage
        if: ${{ matrix.compiler.name == 'GCC 12' }}
        run: |
          make coverage_lcov GCOV_EXEC=/usr/bin/gcov-12

      - name: Upload coverage to Codecov
        if: ${{ matrix.compiler.name == 'GCC 12' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./_build_unit_tests/_coverage/coverage.info
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
