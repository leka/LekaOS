# Leka - LekaOS
# Copyright 2022 APF France handicap
# SPDX-License-Identifier: Apache-2.0

name: Code Analysis - Sanitizers

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  run_sanitizers:
    name: Build & run
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        compiler: [
            { name: Clang 13, cc: /usr/bin/clang-13, cxx: /usr/bin/clang++-13 },
            { name: Clang 14, cc: /usr/bin/clang-14, cxx: /usr/bin/clang++-14 },
            { name: GCC 10, cc: /usr/bin/gcc-10, cxx: /usr/bin/g++-10 },
            # { name: GCC 11, cc: /usr/bin/gcc-11, cxx: /usr/bin/g++-11 }, # ? Not working yet, see https://github.com/boost-ext/sml/issues/546
            { name: GCC 12, cc: /usr/bin/gcc-12, cxx: /usr/bin/g++-12 },
          ]
        optimisation_level: ["-O0", "-Og", "-O1", "-O2", "-Os"]

    steps:
      - uses: actions/checkout@v3

      - name: Set CC & CXX env
        id: set_cc_cxx_env
        shell: bash
        run: |
          ${{ matrix.compiler.cc }} --version
          ${{ matrix.compiler.cxx }} --version
          echo "CC=${{ matrix.compiler.cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler.cxx }}" >> $GITHUB_ENV

      - name: Setup CI
        uses: ./.github/actions/setup
        with:
          ccache_name: code_analysis-sanitizers-${{ github.ref_name }}-${{ matrix.compiler.name }}-${{ matrix.optimisation_level }}
          ccache_restore_keys: |
            ${{ runner.os }}-ccache-code_analysis-sanitizers-${{ github.ref_name }}-${{ matrix.compiler.name }}-
            ${{ runner.os }}-ccache-code_analysis-sanitizers-${{ github.ref_name }}-
            ${{ runner.os }}-ccache-code_analysis-sanitizers-
            ${{ runner.os }}-ccache-code_analysis-

      #
      # Mark: - Config, build & run unit tests
      #

      - name: Ccache pre build
        run: |
          make ccache_prebuild

      - name: Config, build & run
        run: |
          export ASAN_OPTIONS=detect_leaks=1
          export UBSAN_OPTIONS=print_stacktrace=1
          make config_unit_tests COVERAGE=ON SANITIZERS=ON CI_UT_OPTIMIZATION_LEVEL="${{ matrix.optimisation_level }}"
          make unit_tests

      - name: Ccache post build
        run: |
          make ccache_postbuild
          ccache -z
