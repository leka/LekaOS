// Leka - LekaOS
// Copyright 2020 APF France handicap
// SPDX-License-Identifier: Apache-2.0

#include <array>

#include "Utils.h"
#include "gtest/gtest.h"

using namespace leka::utils::math;

TEST(MathUtilsTest, checksum8ForOneValue0x00)
{
	auto data = std::to_array<uint8_t>({0x00});

	auto checksum = checksum8(data);

	EXPECT_EQ(checksum, 0x00);
}

TEST(MathUtilsTest, checksum8ForOneValue0xFF)
{
	auto data = std::to_array<uint8_t>({0xFF});

	auto checksum = checksum8(data);

	EXPECT_EQ(checksum, 0xFF);
}

TEST(MathUtilsTest, checksum8ForOneValueInfoCommand)
{
	auto data = std::to_array<uint8_t>({0x70});

	auto checksum = checksum8(data);

	EXPECT_EQ(checksum, 0x70);
}

TEST(MathUtilsTest, checksum8ForTwoValues)
{
	{
		auto data = std::to_array<uint8_t>({0x00, 0xFF});

		auto checksum = checksum8(data);

		EXPECT_EQ(checksum, 0xFF);
	}

	{
		auto data = std::to_array<uint8_t>({0x01, 0xFF});

		auto checksum = checksum8(data);

		EXPECT_EQ(checksum, 0x00);
	}

	{
		auto data = std::to_array<uint8_t>({0xFF, 0x01});

		auto checksum = checksum8(data);

		EXPECT_EQ(checksum, 0x00);
	}
}

TEST(MathUtilsTest, checksum8ForMultipleValuesTurnOneLedOn)
{
	auto data = std::to_array<uint8_t>({0x15, 0x00, 0xFF, 0x00, 0x00});

	auto checksum = checksum8(data);

	EXPECT_EQ(checksum, 0x14);
}

TEST(MathUtilsTest, checksum8ForMultipleValuesTurnAllLedsOn)
{
	auto data = std::to_array<uint8_t>(
		{0x15, 0x00, 0x33, 0x00, 0x00, 0x15, 0x01, 0x66, 0x00, 0x00, 0x15, 0x02, 0x99, 0x00, 0x00, 0x15, 0x03,
		 0xCC, 0x00, 0x00, 0x15, 0x04, 0xFF, 0x00, 0x00, 0x15, 0x05, 0x00, 0x00, 0x00, 0x15, 0x06, 0x00, 0x33,
		 0x00, 0x15, 0x07, 0x00, 0x66, 0x00, 0x15, 0x08, 0x00, 0x99, 0x00, 0x15, 0x09, 0x00, 0xCC, 0x00, 0x15,
		 0x0A, 0x00, 0xFF, 0x00, 0x15, 0x0B, 0x00, 0x00, 0x00, 0x15, 0x0C, 0x00, 0x00, 0x33, 0x15, 0x0D, 0x00,
		 0x00, 0x66, 0x15, 0x0E, 0x00, 0x00, 0x99, 0x15, 0x0F, 0x00, 0x00, 0xCC, 0x15, 0x10, 0xFF, 0x00, 0x00,
		 0x15, 0x11, 0x00, 0xFF, 0x00, 0x15, 0x12, 0x00, 0x00, 0xFF, 0x15, 0x13, 0xFF, 0xFF, 0xFF});

	auto checksum = checksum8(data);

	EXPECT_EQ(checksum, 0x54);
}
